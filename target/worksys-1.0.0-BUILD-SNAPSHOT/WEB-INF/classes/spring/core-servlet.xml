<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- json 이나 xml 요청/응답 처리를 위해 필요한 변환 모듈 또는 데이터 바인딩 처리를 위한 conversionService등을 빈으로 등록 -->
	<mvc:annotation-driven />
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- 커스텀 뷰 를 사용 하기 위한 설정  뷰 이름과 동일한 이름을 갖는 빈을 뷰로 사용한다. -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"></property>
	</bean>
	
	<!-- jstl이 존재할 경우 jstlview를 리턴 하도록 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="viewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="order" value="1"></property>
	</bean>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->


	<!-- 메시지 properties 설정 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="basenames">
			<list>
				<value>classpath:/message/message</value>
			</list>
		</property>
		<property name="fallbackToSystemLocale"
			value="false" />
		<property name="cacheSeconds" value="10" />
	</bean>

	<bean id="messageSourceAccessor"
		class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="messageSource" />
	</bean>

	<!-- JSON 설정 -->
	<!-- jsonView 설정 -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
    	<property name="contentType" value="application/json"></property>
    </bean>
    
    <!-- json 요청 몸체를 자바 객체로 변환하거나 자바 캑체를 json 응답 몸체로 변환한다. -->
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<!-- 컨트롤러 적용 빈 객체에 대한 어댑터 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 에러 처리 초기에러 페이지는 아직 없음! -->
<!-- 	<bean id="exceptionResolver"
		class="com.kimi.workstm.common.utils.CommonExcpetionResolver">
		<property name="defaultErrorView" value="forward:/common/error.jsp" />
		<property name="warnLogCategory" value="controller.logs" />
	</bean> -->

	<context:component-scan base-package="com.kimi.workstm" />

</beans>
