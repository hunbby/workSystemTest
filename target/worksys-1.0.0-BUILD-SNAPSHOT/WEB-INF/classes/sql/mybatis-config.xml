<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

	<settings>
		<setting name="cacheEnabled" value="false"/> 
		<!-- 설정에서 각 매퍼에 설정된 캐시를 전역적으로 사용할지 말지에 대한 여부 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 지연로딩을 사용할지에 대한 여부. 사용하지 않는다면 모두 즉시 로딩할 것이다. -->
		<setting name="multipleResultSetsEnabled" value="true"/>
		<!-- 한개의 구문에서 여러개의 ResultSet을 허용할지의 여부(드라이버가 해당 기능을 지원해야 함) -->
		<setting name="useColumnLabel" value="true"/>
		<!-- 칼럼명 대신에 칼럼라벨을 사용. 드라이버마다 조금 다르게 작동한다. 문서와 간단한 테스트를 통해 실제 기대하는 것처럼 작동하는지 확인해야 한다. -->
		<setting name="useGeneratedKeys" value="false"/>
		<!-- 생성키에 대한 JDBC 지원을 허용. 지원하는 드라이버가 필요하다. true로 설정하면 생성키를 강제로 생성한다. 일부 드라이버(예를들면, Derby)에서는 이 설정을 무시한다. -->
		<setting name="autoMappingBehavior" value="PARTIAL"/>
		<!-- 마이바티스가 칼럼을 필드/프로퍼티에 자동으로 매핑할지와 방법에 대해 명시. PARTIAL은 간단한 자동매핑만 할뿐 내포된 결과에 대해서는 처리하지 않는다. FULL은 처리가능한 모든 자동매핑을 처리한다. -->
		<setting name="defaultExecutorType" value="SIMPLE"/>
		<!-- 디폴트 실행자(executor) 설정. SIMPLE 실행자는 특별히 하는 것이 없다. REUSE 실행자는 PreparedStatement를 재사용한다. BATCH 실행자는 구문을 재사용하고 수정을 배치처리한다. -->
		<setting name="safeRowBoundsEnabled" value="false"/>
		<!-- 중첩구문내 RowBound사용을 허용 허용한다면 false로 설정 -->
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		<!-- 전통적인 데이터베이스 칼럼명 형태인 A_COLUMN을 CamelCase형태의 자바 프로퍼티명 형태인 aColumn으로 자동으로 매핑하도록 함 -->
		<setting name="localCacheScope" value="STATEMENT"/>
		<!-- 	마이바티스는 순환참조를 막거나 반복된 쿼리의 속도를 높히기 위해 로컬캐시를 사용한다. 
			디폴트 설정인 SESSION을 사용해서 동일 세션의 모든 쿼리를 캐시한다. 
			localCacheScope=STATEMENT 로 설정하면 로컬 세션은 구문 실행할때만 사용하고 
			같은 SqlSession에서 두개의 다른 호출사이에는 데이터를 공유하지 않는다. -->
<!-- 		<setting name="jdbcTypeForNull" value="OTHER"/> -->
		<setting name="jdbcTypeForNull" value="VARCHAR"/>
		<!-- JDBC타입을 파라미터에 제공하지 않을때 null값을 처리한 JDBC타입을 명시한다.
			 일부 드라이버는 칼럼의 JDBC타입을 정의하도록 요구하지만 대부분은 NULL, VARCHAR 나 OTHER 처럼 일반적인 값을 사용해서 동작한다. -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
		<!-- 지연로딩을 야기하는 객체의 메소드를 명시 -->
	</settings>
	
	<typeAliases>
		<typeAlias alias="EnterpriseVO"		type="com.kimi.workstm.common.domain.EnterpriseVO"/>
		<typeAlias alias="UserVO"			type="com.kimi.workstm.common.domain.UserVO"/>
		<typeAlias alias="LoginVO"			type="com.kimi.workstm.common.domain.LoginVO"/>
		<typeAlias alias="ProjectVO"		type="com.kimi.workstm.common.domain.ProjectVO"/>
		<typeAlias alias="TreeVO"			type="com.kimi.workstm.common.utils.TreeVO"/>
		<typeAlias alias="DeptVO"			type="com.kimi.workstm.common.domain.DeptVO"/>
		<typeAlias alias="PjtTermVO"		type="com.kimi.workstm.common.domain.PjtTermVO"/>
	</typeAliases>
	
</configuration>
